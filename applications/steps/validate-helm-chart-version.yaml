
parameters:
  - name: workingDirectory
    type: string
    default: $(Pipeline.Workspace)/s

steps:
  - task: Bash@3
    displayName: 'Validate Helm Chart Version'
    inputs:
      workingDirectory: ${{ parameters.workingDirectory }}
      targetType: 'inline'
      script: |
        set -e

        # Function to convert version to integer
        version_to_int() {
          local version=$1
          local major minor patch
          IFS='.' read -r major minor patch <<< "$version"
          printf '%d%03d%03d' "$major" "$minor" "$patch"
        }
        
        echo -e "target branch: $(System.PullRequest.targetBranchName)"
        
        # Chart file can be .yml or .yaml
        chartFile=$(ls | grep -E 'Chart\.ya?ml')
        if [ -z "${chartFile}" ]; then
          echo "Error: No chart file found in the repository"
          exit 1
        fi

        # Get the version from the target branch
        target_version=$(git show origin/$(System.PullRequest.targetBranchName):${chartFile} | grep '^version:' | awk '{print $2}')
        echo "Target branch version: $target_version"
        if [ -z "$target_version" ]; then
          echo "Error: Unable to retrieve helm chart version from target branch"
          exit 1
        fi
        
        # Get the version from the PR branch
        pr_version=$(grep '^version:' ${chartFile} | awk '{print $2}')
        echo "PR branch version: $pr_version"
        if [ -z "$pr_version" ]; then
          echo "Error: Unable to retrieve helm chart version from source branch"
          exit 1
        fi
        
        # Convert versions to integers
        target_version_int=$(version_to_int "$target_version")
        pr_version_int=$(version_to_int "$pr_version")
        
        echo "Target branch version as integer: $target_version_int"
        echo "PR branch version as integer: $pr_version_int"
        
        # Compare versions
        if [ "${pr_version_int}" -le "${target_version_int}" ]; then
          echo "Error: The version in ${chartFile} has not been incremented."
          exit 1
        else
          echo "The version in ${chartFile} has been incremented."
        fi
