# This template will perform a diff on a public helm chart on AKS cluster. The helm chart name and repo url must be passed in as parameters

parameters:
  - name: enabled
    type: boolean
    default: true
  - name: serviceConnection
    type: string
    default: false
  - name: namespace
    type: string
    default: false
  - name: releaseName
    type: string
    default: false
  - name: deployEnv
    type: string
    default: false
  - name: helmChartRepoUrl
    type: string
    default: false
  - name: helmChart
    type: string
    default: false
  - name: helmChartVersion
    type: string
    default: false
  - name: additionalSteps
    type: stepList
    default: []
  # If there are multiple repos checked out, then this should change to say $(Pipeline.Workspace)/main. main being the name of the repo
  - name: workingDirectory
    type: string
    default: $(Pipeline.Workspace)/s
  # Helm override values file to be passed in with helm upgrade command
  - name: overrideValuesFile
    type: string
    default: false

steps:
  - ${{ each step in parameters.additionalSteps }}:
    - ${{ step }}
  - task: AzureCLI@2
    enabled: ${{ parameters.enabled }}
    displayName: Helm Diff
    env:
      KUBECONFIG: "$(Pipeline.Workspace)/kubeconfig"
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: 'bash'
      workingDirectory: ${{ parameters.workingDirectory }}
      scriptLocation: 'inlineScript'
      inlineScript: |
        set -x
        # Check if namespace exists
        if kubectl get namespace ${{ parameters.namespace }} >/dev/null 2>&1; then
          echo "Namespace $namespace already exists"
        else
          echo "Creating namespace ${{ parameters.namespace }}"
          kubectl create namespace ${{ parameters.namespace }}
        fi

        echo -e "Adding helm repo: ${{ parameters.helmChart }} ${{ parameters.helmChartRepoUrl }} and updating...\n"

        helm repo add ${{ parameters.helmChart }} ${{ parameters.helmChartRepoUrl }}
        helm repo update

        echo -e "Performing helm diff operation for upgrade.\n"
        
        helm diff upgrade --install ${{ parameters.releaseName }} ${{ parameters.helmChart }}/${{ parameters.helmChart }} \
           -n ${{ parameters.namespace }} -f ${{ parameters.overrideValuesFile }} --allow-unreleased
