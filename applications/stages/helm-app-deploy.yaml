# This multi-stage template is designed to deploy an application with a helm
# release in the AKS cluster. It is currently used to deploy only dotnetcore
# applications but can be used for any application that utilizes a Helm chart.

# This stage template will validate the existence of the desired container
# image prior to deploying.

# It accepts several values file from a certain path in the application
# repository. At this time, it cannot accept arbitrary values in form of
# --set commands.

# This pipeline template assumes that a variableFile must be passed as
# parameter to the template in the `deployEnv` object. The following
# variables must be available to the pipeline from the variable file:
#   - name: serviceConnection
#     value: 'ado-sp'
#   - name: agentPool
#     value: 'container-pool'
#   - name: aksCluster
#     value: 'dso-ado-k8s-dev-001-aks'
#   - name: aksResourceGroup
#     value: 'dso-k8s-001'
#   - name: helmChart
#     value: 'dotnet-app'
#   - name: helmChartVersion
#     value: '0.1.0'
#   - name: helmReleaseName
#     value: 'sample'
#   - name: namespace
#     value: 'dev'
#   - name: azureEnvironment
#     value: 'aks-sample-dev'


parameters:
- name: deployEnvironments
  type: object
  default: []
  # Sample deployEnvironments object
  # environment: 'test'
  # dependsOn: 'dev_Deploy'
  # variableFile: '/envs/test/pipelines/variables.yaml@self'
  # acrName: ${{ parameters.acrName }}
  # imageName: ${{ parameters.dockerImageName }}
  # imageTag: ${{ parameters.imageTag }}
  # aksAdEnabled: false

stages:
  - ${{ each deployEnv in parameters.deployEnvironments }}:
    - stage: ${{ deployEnv.environment}}_PreDeploy
      displayName: '${{ deployEnv.environment }} - Pre deploy'
      dependsOn: ${{deployEnv.dependsOn}}
      ${{ if deployEnv.variableFile }}:
        variables:
          - template: ${{ deployEnv.variableFile }}
      jobs:
        - template: /common/jobs/generic-job.yaml
          parameters:
            jobName: ${{ deployEnv.environment }}_PreDeployJob
            jobDisplayName: '${{ deployEnv.environment }} - Pre deploy'
            # Agent pool would be different for each environment. Comes from envs/{env}/pipelines/variables.yaml
            poolName: ${{ variables.agentPool }}
            workspace:
              clean: all
            steps:
              - template: /applications/steps/get-kubernetes-credentials.yaml
                parameters:
                  serviceConnection: ${{ variables.serviceConnection }}
                  aksResourceGroup: $(aksResourceGroup)
                  aksCluster: $(aksCluster)
                  ${{ if deployEnv.aksAdEnabled }}:
                    aksAdEnabled: ${{ deployEnv.aksAdEnabled }}
              - template: /applications/steps/helm-acr-login.yaml
                parameters:
                  serviceConnection: ${{ variables.serviceConnection }}
                  acrName: ${{ deployEnv.acrName }}
              - template: /applications/steps/helm-diff.yaml
                parameters:
                  serviceConnection: ${{ variables.serviceConnection }}
                  namespace: $(namespace)
                  releaseName: $(helmReleaseName)
                  acrName: ${{ deployEnv.acrName }}
                  imageName: ${{ deployEnv.imageName }}
                  imageTag: ${{ deployEnv.imageTag }}
                  deployEnv: ${{ deployEnv.environment }}
                  helmChart: $(helmChart)
                  helmChartVersion: $(helmChartVersion)
    - stage: ${{ deployEnv.environment }}_Deploy
      displayName: '${{ deployEnv.environment }} - Deploy'
      dependsOn: ${{ deployEnv.environment}}_PreDeploy
      ${{ if deployEnv.variableFile }}:
        variables:
          - template: ${{ deployEnv.variableFile }}
      jobs:
        - template: /common/jobs/deploy-job.yaml
          parameters:
            jobName: ${{ deployEnv.environment }}_DeployJob
            jobDisplayName: '${{ deployEnv.environment }} - Deploy'
             # Agent pool would be different for each environment. Comes from envs/{env}/pipelines/variables.yaml
            poolName: ${{ variables.agentPool }}
            workspace:
              clean: all
            azureEnvironment: ${{ variables.azureEnvironment }}
            steps:
              - template: /common/steps/verify-ado-agent.yaml
              - template: /applications/steps/get-kubernetes-credentials.yaml
                parameters:
                  serviceConnection: ${{ variables.serviceConnection }}
                  aksResourceGroup: $(aksResourceGroup)
                  aksCluster: $(aksCluster)
                  ${{ if deployEnv.aksAdEnabled }}:
                    aksAdEnabled: ${{ deployEnv.aksAdEnabled }}
              - template: /applications/steps/helm-acr-login.yaml
                parameters:
                  serviceConnection: ${{ variables.serviceConnection }}
                  acrName: ${{ deployEnv.acrName }}
              - template: /applications/steps/acr-validate-image-exists.yaml
                parameters:
                  serviceConnection: ${{ variables.serviceConnection }}
                  acrRegistry: ${{ deployEnv.acrName }}
                  dockerImageName: ${{ deployEnv.imageName }}
                  dockerImageTag: ${{ deployEnv.imageTag }}
              - template: /applications/steps/helm-upgrade.yaml
                parameters:
                  serviceConnection: ${{ variables.serviceConnection }}
                  namespace: $(namespace)
                  releaseName: $(helmReleaseName)
                  acrName: ${{ deployEnv.acrName }}
                  imageName: ${{ deployEnv.imageName }}
                  imageTag: ${{ deployEnv.imageTag }}
                  deployEnv: ${{ deployEnv.environment }}
                  helmChart: $(helmChart)
                  helmChartVersion: $(helmChartVersion)
                  ${{ if variables.helmTimeoutDuration }}:
                    helmTimeoutDuration: ${{ variables.helmTimeoutDuration }}
