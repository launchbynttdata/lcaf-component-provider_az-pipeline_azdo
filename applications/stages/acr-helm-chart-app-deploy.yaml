# This template is a multistage template to deploy any  Helm chart stored in ACR. The serviceConnection must have permission to pull from ACR.
# This helm deploy would only accept inputs in the form of a values.yaml file. --set commands can be passed in as additionalFields
# If there are any secrets dependency, they can be passed in as secretFields in the format shown below. This pipeline will fetch the secrets 
# from the Key Vault and pass them to the helm chart with best efforts of not printing them in the pipeline or helm diff. The serviceConnection must have permission to read secrets
# from the specified key vault.

# This pipeline template assumes that a variableFile must be passed as parameter to the template in the `deployEnv` object
# Expect the following variables to be available in the variable file
# variables: 
#   - name: serviceConnection
#     value: 'ado-sp'
#   - name: agentPool
#     value: 'container-pool'
#   - name: aksCluster
#     value: 'dso-ado-k8s-dev-001-aks'
#   - name: aksResourceGroup
#     value: 'dso-k8s-001'
#   - name: helmChartName
#     value: 'dotnet-app'
#   - name: helmChartVersion
#     value: '0.1.0'
#   - name: helmReleaseName
#     value: 'sample'
#   - name: namespace
#     value: 'dev'
#   - name: azureEnvironment
#     value: 'aks-sample-dev'
#   - name: additionalFields
#     value: '--set image=1.0.1'
#   - name: keyVaultName
#     value: 'dso-test-kv-001'
#   - name: secretFields
#     value: 'otel.connectionString:connection-string,otel.password:password'
#   - name: helmTimeoutDuration
#     value: 5m0s


parameters:
- name: deployEnvironments
  type: object
  default: []
  # Sample deployEnvironments object
  # environment: 'test'
  # dependsOn: 'dev_Deploy'
  # variableFile: '/envs/test/pipelines/variables.yaml@self'
  # acrName: ${{ parameters.acrName }}
  # imageName: ${{ parameters.dockerImageName }}
  # imageTag: ${{ parameters.imageTag }}
  # aksAdEnabled: false

stages:
  - ${{ each deployEnv in parameters.deployEnvironments }}:
    - stage: ${{ deployEnv.environment}}_${{ deployEnv.region }}_PreDeploy
      displayName: '${{ deployEnv.environment }} ${{ deployEnv.region }} - Pre deploy'
      dependsOn: ${{deployEnv.dependsOn}}
      ${{ if deployEnv.variableFile }}:
        variables:
          - template: ${{ deployEnv.variableFile }}
      jobs:
        - template: ../../common/jobs/generic-job.yaml
          parameters:
            jobName: ${{ deployEnv.environment }}_${{ deployEnv.region }}_PreDeployJob
            jobDisplayName: '${{ deployEnv.environment }} ${{ deployEnv.region }} - Pre deploy'
            # Agent pool would be different for each environment. Comes from envs/{env}/pipelines/variables.yaml
            poolName: ${{ variables.agentPool }}
            workspace:
              clean: all
            steps:
              - template: ../steps/get-kubernetes-credentials.yaml
                parameters:
                  serviceConnection: ${{ variables.serviceConnection }}
                  aksResourceGroup: ${{ variables.aksResourceGroup }}
                  aksCluster: ${{ variables.aksCluster }}
                  ${{ if deployEnv.aksAdEnabled }}:
                    aksAdEnabled: ${{ deployEnv.aksAdEnabled }}
              - template: ../steps/helm-acr-login.yaml
                parameters:
                  serviceConnection: ${{ variables.serviceConnection }}
                  acrName: ${{ variables.acrName }}
              - template: ../steps/acr-chart-helm-diff.yaml
                parameters:
                  serviceConnection: ${{ variables.serviceConnection }}
                  namespace: ${{ variables.namespace }}
                  releaseName: ${{ variables.helmReleaseName }}
                  acrName: ${{ variables.acrName }}
                  deployEnv: ${{ deployEnv.environment }}
                  helmChartName: ${{ variables.helmChartName }}
                  helmChartVersion: ${{ variables.helmChartVersion }}
                  ${{ if deployEnv.overrideValuesFile }}:
                    overrideValuesFile: ${{ deployEnv.overrideValuesFile }}
                  ${{ if variables.secretFields }}:
                    secretFields: ${{ variables.secretFields }}
                  ${{ if variables.keyVaultName }}:
                    keyVaultName: ${{ variables.keyVaultName }}
                  ${{ if variables.additionalFields }}:
                    additionalFields: ${{ variables.additionalFields }}
    - stage: ${{ deployEnv.environment }}_${{ deployEnv.region }}_Deploy
      displayName: '${{ deployEnv.environment }} ${{ deployEnv.region }} - Deploy'
      dependsOn: ${{ deployEnv.environment}}_${{ deployEnv.region }}_PreDeploy
      ${{ if deployEnv.variableFile }}:
        variables:
          - template: ${{ deployEnv.variableFile }}
      jobs:
        - template: ../../common/jobs/deploy-job.yaml
          parameters:
            jobName: ${{ deployEnv.environment }}_DeployJob
            jobDisplayName: '${{ deployEnv.environment }} - Deploy'
             # Agent pool would be different for each environment. Comes from envs/{env}/pipelines/variables.yaml
            poolName: ${{ variables.agentPool }}
            workspace:
              clean: all
            azureEnvironment: ${{ deployEnv.azureEnvironment }}
            steps:
              - template: ../steps/get-kubernetes-credentials.yaml
                parameters:
                  serviceConnection: ${{ variables.serviceConnection }}
                  aksResourceGroup: ${{ variables.aksResourceGroup }}
                  aksCluster: ${{ variables.aksCluster }}
                  ${{ if deployEnv.aksAdEnabled }}:
                    aksAdEnabled: ${{ deployEnv.aksAdEnabled }}
              - template: ../steps/helm-acr-login.yaml
                parameters:
                  serviceConnection: ${{ variables.serviceConnection }}
                  acrName: ${{ variables.acrName }}
              #- checkout: self
              - template: ../steps/acr-chart-helm-upgrade.yaml
                parameters:
                  serviceConnection: ${{ variables.serviceConnection }}
                  namespace: ${{ variables.namespace }}
                  releaseName: ${{ variables.helmReleaseName }}
                  acrName: ${{ variables.acrName }}
                  deployEnv: ${{ deployEnv.environment }}
                  helmChartName: ${{ variables.helmChartName }}
                  helmChartVersion: ${{ variables.helmChartVersion }}
                  ${{ if variables.helmTimeoutDuration }}:
                    helmTimeoutDuration: ${{ variables.helmTimeoutDuration }}
                  ${{ if deployEnv.overrideValuesFile }}:
                    overrideValuesFile: ${{ deployEnv.overrideValuesFile }}
                  ${{ if deployEnv.helmWaitForCompletion }}:
                    helmWaitForCompletion: ${{ deployEnv.helmWaitForCompletion }}
                  ${{ if deployEnv.helmForceUpgrade }}:
                    helmForceUpgrade: ${{ deployEnv.helmForceUpgrade }}
                  ${{ if variables.secretFields }}:
                    secretFields: ${{ variables.secretFields }}
                  ${{ if variables.keyVaultName }}:
                    keyVaultName: ${{ variables.keyVaultName }}
                  ${{ if variables.additionalFields }}:
                    additionalFields: ${{ variables.additionalFields }}
        
                        
