# This template will build a docker image and push it to the container registry.
# A tag will be associated with the image, and it will be derived from the tags
# that point to the current HEAD of the checked-out repo. If multiple tags are
# found pointing to the same HEAD, the process selects the most recent version
# (using `sort -V`) and will prefer a semantic version tag over a build ID tag.

# parameters:
#  - poolName: The name of the agent pool to run the job on.
#  - dockerfile: The path to the Dockerfile. Default is 'Dockerfile'
#  - imageRepository: The FQDN of the image repository
#  - distPath: the directory containing the build artifacts. Default is 'dist/'
#  - serviceConnection: the ADO service connection to use to login to the
#    container registry
#  - dockerImageName: the name of the docker image. Default is the name of the
#    repository

parameters:
  - name: poolName
    type: string
  - name: dockerfile
    type: string
    default: 'Dockerfile'
  - name: imageRepository
    type: string
  - name: distPath
    type: string
    default: 'dist/'
  - name: serviceConnection
    type: string
  - name: dockerImageName
    type: string
    default: ''
  - name: push
    type: boolean
    default: true
  - name: dependsOn
    type: object
    default: []

stages:
  - stage: build_image
    displayName: Build Image
    dependsOn: ${{ parameters.dependsOn }}
    jobs:
      - template: /common/jobs/generic-job.yaml
        parameters:
          jobName: BuildImage
          jobDisplayName: Build Image
          poolName: ${{ parameters.poolName }}
          workspace:
            clean: all
          steps:
            - template: /common/steps/get_latest_tag.yaml
              parameters:
                serviceConnection: ${{ parameters.serviceConnection }}
                outputVariableName: LatestTag
            - template: /applications/steps/local-build-and-push-docker-image.yaml
              parameters:
                acrRegistry: ${{ parameters.imageRepository }}
                distPath: ${{ parameters.distPath }}
                dockerfile: ${{ parameters.dockerfile }}
                serviceConnection: ${{ parameters.serviceConnection }}
                push: ${{ parameters.push }}
                ${{ if ne(parameters.dockerImageName, '') }}:
                  dockerImageName: ${{ parameters.dockerImageName }}
                ${{ else }}:
                  dockerImageName: $(Build.Repository.Name)
                dockerImageTag: |
                  $(LatestTag)
                  latest
