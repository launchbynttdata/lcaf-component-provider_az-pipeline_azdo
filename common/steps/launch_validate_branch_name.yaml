# This step template will validate the branch name meets our requirements for automated versioning.
# The following variables must be present in the current scope for this job to run:
#  serviceConnection: The name of the Service Connection to utilize
#  buildSourceBranch: The branch of the triggering repo the build was queued for.
#  pullRequestSourceBranch: The name of the source branch for a pull request.
#  pullRequestTargetBranch: The name of the target branch for a pull request.
#  HasSemverTag: A boolean containing 'true' or 'false' indicating whether this repo has existing semver tags

steps:
  - task: AzureClI@2
    displayName: Validate Branch Name For Semantic Versioning
    name: ValidateBranchName
    condition: "eq(variables['HasSemverTag'], 'true')"
    inputs:
      scriptType: bash
      scriptLocation: inlineScript
      workingDirectory: $(Pipeline.Workspace)/$(Build.Repository.Name)
      inlineScript: |
        export PATH=/home/launch/env/bin:$PATH
        echo "BUILD_SOURCE_BRANCH: ${BUILD_SOURCE_BRANCH}"
        echo "PULL_REQUEST_SOURCE_BRANCH: ${PULL_REQUEST_SOURCE_BRANCH}"
        SOURCE_BRANCH=${PULL_REQUEST_SOURCE_BRANCH:-${BUILD_SOURCE_BRANCH}}
        echo "SOURCE_BRANCH: ${SOURCE_BRANCH}"
        # If we get a non-main branch, we need to validate the name using launch-cli.
        [ $SOURCE_BRANCH == 'main' ] || launch validate branch-name --branch-name "${SOURCE_BRANCH}" || (echo "##vso[task.logissue type=error]Source Branch name is invalid."; exit 1)
      azureSubscription: $(serviceConnection)
      addSpnToEnvironment: true
    env:
      BUILD_SOURCE_BRANCH: $(buildSourceBranch)
      PULL_REQUEST_SOURCE_BRANCH: $(pullRequestSourceBranch)
