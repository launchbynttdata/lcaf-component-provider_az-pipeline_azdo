# This step template will validate the branch name meets our requirements for
# automated versioning. The following variables must be present in the current
# scope for this job to run:
# - HasSemverTag: A boolean indicating whether this repo has existing semver
#   tags. This variable is used to determine whether or not this step will run.

parameters:
  - name: serviceConnection
    type: string
  - name: buildSourceBranch
    type: string
  - name: pullRequestSourceBranch
    type: string

steps:
  - task: AzureClI@2
    displayName: Validate Branch Name For Semantic Versioning
    name: ValidateBranchName
    condition: "eq(variables['HasSemverTag'], 'true')"
    inputs:
      scriptType: bash
      scriptLocation: inlineScript
      workingDirectory: $(Pipeline.Workspace)/$(Build.Repository.Name)
      inlineScript: |
        export PATH=/home/launch/env/bin:$PATH
        echo "BUILD_SOURCE_BRANCH: ${BUILD_SOURCE_BRANCH}"
        echo "PULL_REQUEST_SOURCE_BRANCH: ${PULL_REQUEST_SOURCE_BRANCH}"
        SOURCE_BRANCH=${PULL_REQUEST_SOURCE_BRANCH:-${BUILD_SOURCE_BRANCH}}
        echo "SOURCE_BRANCH: ${SOURCE_BRANCH}"
        # If we get a non-main branch, we need to validate the name using launch-cli.
        [ $SOURCE_BRANCH == 'main' ] || launch validate branch-name --branch-name "${SOURCE_BRANCH}" || (echo "##vso[task.logissue type=error]Source Branch name is invalid."; exit 1)
      azureSubscription: ${{ parameters.serviceConnection }}
      addSpnToEnvironment: true
    env:
      BUILD_SOURCE_BRANCH: ${{ parameters.buildSourceBranch }}
      PULL_REQUEST_SOURCE_BRANCH: ${{ parameters.pullRequestSourceBranch }}
