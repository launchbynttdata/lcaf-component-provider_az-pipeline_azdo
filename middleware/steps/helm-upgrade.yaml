parameters:
  - name: enabled
    type: boolean
    default: true
  - name: serviceConnection
    type: string
    default: false
  - name: namespace
    type: string
    default: false
  - name: releaseName
    type: string
    default: false
  - name: acrName
    type: string
    default: None
  - name: deployEnv
    type: string
    default: false
  - name: helmChart
    type: string
    default: false
  - name: helmChartVersion
    type: string
    default: false
  - name: valuesFiles
    type: object
    default: []
  - name: additionalSteps
    type: stepList
    default: []
  # If there are multiple repos checked out, then this should change to say $(Pipeline.Workspace)/main. main being the name of the repo
  - name: workingDirectory
    type: string
    default: $(Pipeline.Workspace)/s

steps:
  - ${{ each step in parameters.additionalSteps }}:
    - ${{ step }}
  - task: AzureCLI@2
    enabled: ${{ parameters.enabled }}
    displayName: Helm upgrade
    env:
      KUBECONFIG: "$(Pipeline.Workspace)/kubeconfig"
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: 'bash'
      workingDirectory: ${{ parameters.workingDirectory }}
      scriptLocation: 'inlineScript'
      inlineScript: |
        set -x
        ls -l 
        pwd
        if [[ "${{ parameters.acrName }}" == "None" ]]; then
          helmChart="oci://${{ parameters.acrName }}/helm/${{ parameters.helmChart }}"
        else
          helmChart="${{ parameters.helmChart }}"
        fi

        # Get the env vars and secrets
        envFolder=envs/${{ parameters.deployEnv }}
        ls ${envFolder}
        helmValuesFile=${envFolder}/helm/values.yaml

        helm upgrade --install ${{ parameters.releaseName }} ${helmChart} \
          --version ${{ parameters.helmChartVersion }} -f ${helmValuesFile} \
          --create-namespace -n ${{ parameters.namespace }} \
          --wait
  