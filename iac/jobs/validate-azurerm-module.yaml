parameters:
  - name: gitRepo
    type: string
  - name: gitBranch
    type: string
  - name: gitCommit
    type: string
  - name: armServiceConnection
    type: string

  - name: gitHubToken
    type: string
    default: $(GITHUB_TOKEN)
  - name: gitHubApplication
    type: object
    default:
      applicationId: $(GITHUB_APPLICATION_ID)
      installationId: $(GITHUB_INSTALLATION_ID)
      signingCertFile: $(GITHUB_SIGNING_CERT_FILE)

  - name: secureFiles
    type: object
    default: {}
  - name: condition
    type: string
    default: true

jobs:
  - job: ValidateAzurermModule
    displayName: Validate terraform module
    condition: ${{ parameters.condition }}
    variables:
      ASDF_INSTALL_DIR: '$HOME/.asdf'
      ASDF_SCRIPT_FILE: '$HOME/.asdf/asdf.sh'
      CURRENT_PROJECT_URL: '$(System.TeamFoundationCollectionUri)$(System.TeamProjectId)'
      CURRENT_BUILD_URL: '$(CURRENT_PROJECT_URL)/_build/results?buildId=$(Build.BuildId)'
      # tokens aquired at runtime take precedence over ones supplied by parameter
      ${{ if parameters.gitHubApplication }}:
        GITHUB_TOKEN: $(GITHUB_TOKEN)
      ${{ else }}:
        GITHUB_TOKEN: ${{ parameters.gitHubToken }}
    steps:
      - checkout: none

      - ${{ each file in parameters.secureFiles }}:
        - task: DownloadSecureFile@1
          # secure file is downloaded to $(<name>.secureFilePath)
          name: ${{ file.key }}
          displayName: 'Download ${{ file.key }}'
          inputs:
            secureFile: ${{ file.secureFile }}

      - ${{ if parameters.gitHubApplication }}:
        - task: Bash@3
          displayName: 'Install launch cli'
          inputs:
            targetType: 'inline'
            script: |
              python3 -m pip install launch-cli==0.10.0

        - task: Bash@3
          displayName: 'Authenticate with GitHub'
          env:
            GITHUB_APPLIACTION_ID: ${{ parameters.gitHubApplication.applicationId }}
            GITHUB_INSTALLATION_ID: ${{ parameters.gitHubApplication.installationId }}
            GITHUB_SIGNING_CERT_FILE: ${{ parameters.gitHubApplication.signingCertFile }}
          inputs:
            targetType: 'inline'
            script: |
              echo "##vso[task.setvariable variable=GITHUB_TOKEN]$(launch github auth application)"


      - template: ../steps/post-github-commit-status.yaml
        parameters:
          gitRepo: ${{ parameters.gitRepo }}
          gitCommit: ${{ parameters.gitCommit }}
          gitHubToken: $(GITHUB_TOKEN)
          statusData: >-
            {
              "state": "pending",
              "description": "Validate terraform module",
              "target_url": "$(CURRENT_BUILD_URL)",
              "context": "azpipelines/validate-azurerm-module"
            }

      - task: Bash@3
        displayName: 'Install repo tool'
        inputs:
          targetType: 'inline'
          script: |
            HOME_BIN="$HOME/.bin"
            REPO_BIN_PATH="$HOME_BIN/repo"

            mkdir -p "$HOME_BIN"
            echo "##vso[task.prependpath]$HOME_BIN"

            curl https://storage.googleapis.com/git-repo-downloads/repo > "$REPO_BIN_PATH"
            chmod a+rx "$REPO_BIN_PATH"

            "$REPO_BIN_PATH" version

      - task: Bash@3
        displayName: 'Install asdf version manager'
        inputs:
          targetType: 'inline'
          script: |
            git clone https://github.com/asdf-vm/asdf.git ${{ variables.ASDF_INSTALL_DIR }} --branch v0.14.1

      - task: Bash@3
        displayName: 'Checkout terraform module'
        inputs:
          targetType: 'inline'
          script: |
            git clone https://$(GITHUB_TOKEN)@github.com/${{ parameters.gitRepo }}.git . --branch ${{ parameters.gitBranch }}

      - task: Bash@3
        displayName: 'Configure dependencies'
        inputs:
          targetType: 'inline'
          script: |
            git config --global user.name 'azpipelines'
            git config --global user.email 'job@dev.azure.com'
            . ${{ variables.ASDF_SCRIPT_FILE }} && make configure

      - task: AzureCLI@2
        displayName: 'Validate terraform module'
        env:
          GO_LINT_TIMEOUT: 10m
          GO_TEST_TIMEOUT: 45m
        inputs:
          azureSubscription: ${{ parameters.armServiceConnection }}
          scriptLocation: 'inlineScript'
          scriptType: 'bash'
          inlineScript: |
            . ${{ variables.ASDF_SCRIPT_FILE }} && make check

      - task: Bash@3
        condition: always()
        inputs:
          targetType: 'inline'
          script: |
            echo "$(Agent.JobStatus)"
            if [ "$(Agent.JobStatus)" = "Succeeded" ] || [ "$(Agent.JobStatus)" = "SucceededWithIssues" ]; then
              echo "##vso[task.setvariable variable=GITHUB_COMMIT_STATUS]success"
            else
              echo "##vso[task.setvariable variable=GITHUB_COMMIT_STATUS]failure"
            fi

      - template: ../steps/post-github-commit-status.yaml
        parameters:
          gitRepo: ${{ parameters.gitRepo }}
          gitCommit: ${{ parameters.gitCommit }}
          gitHubToken: $(GITHUB_TOKEN)
          condition: always()
          statusData: >-
            {
              "state": "$(GITHUB_COMMIT_STATUS)",
              "description": "Validate terraform module",
              "target_url": "$(CURRENT_BUILD_URL)",
              "context": "azpipelines/validate-azurerm-module"
            }
