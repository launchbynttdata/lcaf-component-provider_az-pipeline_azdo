# This step is used to get the credentials for the AKS cluster and save it to file set as KUBECONFIG environment variable
parameters:
  - name: serviceConnection
    type: string
    default: false
  - name: aksResourceGroup
    type: string
    default: false
  - name: aksCluster
    type: string
    default: false
  - name: aksAdEnabled
    type: boolean
    default: true


steps:
  - task: AzureCLI@2
    displayName: Get AKS credentials
    env:
      KUBECONFIG: "$(Pipeline.Workspace)/kubeconfig"
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # the variables are passed in from the pipeline UI
        if [ ${{ parameters.aksAdEnabled }} == false ]; then
          echo "AD is not enabled. Hence, getting the admin credentials"
          az aks get-credentials --resource-group ${{ parameters.aksResourceGroup }} --name ${{ parameters.aksCluster }} --overwrite-existing -a
          kubectl get nodes || exit 1
        else
          echo "AD is enabled. Hence, getting the user credentials"
          az aks get-credentials --resource-group ${{ parameters.aksResourceGroup }} --name ${{ parameters.aksCluster }} --overwrite-existing
          kubelogin convert-kubeconfig -l azurecli
          kubectl get nodes || exit 1
        fi

      addSpnToEnvironment: true
